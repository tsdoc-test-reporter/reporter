/* eslint-disable @typescript-eslint/no-explicit-any */
import type { Config, TestContext } from '@jest/reporters';
import type { TestDataFactory } from '@tsdoc-test-reporter/core';

export const projectConfigFactory: TestDataFactory<Config.ProjectConfig> = (overrides = {}) => ({
	automock: false,
	cache: false,
	cacheDirectory: '',
	clearMocks: false,
	coveragePathIgnorePatterns: [],
	cwd: '',
	detectLeaks: false,
	detectOpenHandles: false,
	errorOnDeprecated: false,
	extensionsToTreatAsEsm: [],
	forceCoverageMatch: [],
	globals: {},
	id: '',
	injectGlobals: false,
	moduleDirectories: [],
	moduleFileExtensions: [],
	modulePathIgnorePatterns: [],
	prettierPath: '',
	resetMocks: false,
	resetModules: false,
	restoreMocks: false,
	rootDir: '',
	roots: [],
	runner: '',
	sandboxInjectedGlobals: [],
	setupFiles: [],
	setupFilesAfterEnv: [],
	skipFilter: false,
	slowTestThreshold: 0,
	snapshotSerializers: [],
	testEnvironment: '',
	testEnvironmentOptions: {},
	testMatch: [],
	testLocationInResults: false,
	testPathIgnorePatterns: [],
	testRunner: '',
	transformIgnorePatterns: [],
	watchPathIgnorePatterns: [],
	openHandlesTimeout: 0,
	...overrides,
	fakeTimers: {},
	transform: [],
	testRegex: [],
	moduleNameMapper: [],
	modulePaths: [],
	unmockedModulePathPatterns: [],
	displayName: {
		name: 'name',
		color: 'cyan',
	},
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	snapshotFormat: {} as any,
	haste: {
		computeSha1: undefined,
		defaultPlatform: undefined,
		forceNodeFilesystemAPI: undefined,
		enableSymlinks: undefined,
		hasteImplModulePath: undefined,
		platforms: undefined,
		throwOnModuleCollision: undefined,
		hasteMapModulePath: undefined,
		retainAllFiles: undefined,
	},
});

export const testContextFactory: TestDataFactory<TestContext> = (overrides = {}) => ({
	hasteFS: undefined as any,
	moduleMap: undefined as any,
	resolver: undefined as any,
	...overrides,
	config: projectConfigFactory(overrides.config),
});
